@page
@model EsecureWebApp.Pages.Informes.InformeCondicionesModel
@{
    ViewData["Title"] = "Informe Condiciones";
}
@using EsecureModel.ChartData;
<h2>InformePlanificacion</h2>
<div class=" bg-secondary">
    <table class="table table-bordered table-striped table-hover text-dark table-responsive-md" style="width:100%" id="datata">
        <thead>
            <tr>
                <th style="width:50%">
                    Chart 1
                </th>
                <th style="width:50%">
                    Filtros
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <canvas id="densityChart1" width="150" height="100"></canvas>
                </td>
                <td>
                    <div class="table">
                        <div class="row">
                            <link rel="stylesheet" href="~/lib/bootstrap-select/css/bootstrap-select.css" />
                            <div class="col-md-4">
                                <select class="selectpicker" data-show-subtext="true" data-live-search="true">
                                    @foreach (var item in Model.EmpresasNameSL)
                                    {
                                        <option data-subtext="Empresa">@item.Text </option>
                                    }
                                </select>
                                <select class="selectpicker" data-show-subtext="true" data-live-search="true">
                                    @foreach (var item in Model.PersonasNameSL)
                                    {
                                        <option data-subtext="Prevencionista">@item.Text </option>
                                    }
                                </select>

                                <select class="selectpicker" data-show-subtext="true" data-live-search="true">
                                    @foreach (var item in Model.FaenasSL)
                                    {
                                        <option data-subtext="Faena">@item.Text </option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
        <thead>
            <tr>
                <th>
                </th>
                <th>
                </th>
            </tr>
        </thead>
    </table>
</div>
<div class=" bg-secondary">
    <table class="table table-bordered table-striped table-hover text-dark table-responsive-md" style="width:100%" id="datata">
        <thead>
            <tr>
                <th style="width:50%">

                </th>
                <th style="width:50%">

                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <canvas id="densityChart3" width="150" height="100"></canvas>
                </td>
                <td>
                    <canvas id="densityChart4" width="150" height="100"></canvas>
                </td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <th>
                </th>
                <th>
                </th>
            </tr>
        </tfoot>
    </table>
</div>

@section Scripts
    {
    <script src="~/lib/Chart.js/Chart.js" type="text/javascript"></script>
    <script src="~/lib/bootstrap-select/js/bootstrap-select.js"></script>
    <script type="text/javascript">
        /*
         * // To style only selects with the selectpicker class
$('.selectpicker').selectpicker();
or

// To style all selects
$('select').selectpicker();
         * */
        DisplayBarChart("densityChart1");
        /**********************************/
        function DisplayNewBarChart(divName, cua) {
            var densityCanvas = document.getElementById(divName);
            if (cua == 2) {
                var serie1 = @Json.Serialize(Model.chartSerieList[Model.cua2 * 1 + 0]) ;
                var serie2 = @Json.Serialize(Model.chartSerieList[Model.cua2 * 2 + 1]) ;
                var serie3 = @Json.Serialize(Model.chartSerieList[Model.cua2 * 3 + 2]) ;
            }
            if (cua == 3) {
                var serie1 = @Json.Serialize(Model.chartSerieList[Model.cua3 * 3 + 0]) ;
                var serie2 = @Json.Serialize(Model.chartSerieList[Model.cua3 * 2 + 1]) ;
                var serie3 = @Json.Serialize(Model.chartSerieList[Model.cua3 * 1 + 2]) ;
            }
            if (cua == 4) {
                var serie1 = @Json.Serialize(Model.chartSerieList[Model.cua4 * 3 + 0]) ;
                var serie2 = @Json.Serialize(Model.chartSerieList[Model.cua4 * 1 + 1]) ;
                var serie3 = @Json.Serialize(Model.chartSerieList[Model.cua4 * 2 + 2]) ;
            }
            var barChart = new Chart(densityCanvas, {
                type: 'bar',
                data: {
                    labels: ["Emergencia", "Equipos", "Infraestructura", "Orden y Limpieza"],
                    datasets: [serie1, serie2, serie3]
                },
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: 'Estado de cumplimiento (%)'
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                // the data minimum used for determining the ticks is Math.min(dataMin, suggestedMin)
                                suggestedMin: 0,

                                // the data maximum used for determining the ticks is Math.max(dataMax, suggestedMax)
                                suggestedMax: 100
                            }
                        }]
                    }
                }
            });
        }
        function DisplayBarChart(divName) {
            // alert("Display: " + divName );
            var densityCanvas = document.getElementById(divName);
            var serie1 = @Json.Serialize(new ChartSerie()) ;
            var serie2 = @Json.Serialize(new ChartSerie()) ;
            var serie3 = @Json.Serialize(new ChartSerie()) ;

            Chart.defaults.global.defaultFontFamily = "Lato";
            Chart.defaults.global.defaultFontSize = 18;
        /*
            var densityData = {
                label: 'Mes Anterior',
                data: [75, 80, 100, 95],
                backgroundColor: [
                ]
            };
            var densityData2 = {
                label: 'Mes actual',
                data: [55, 90, 50, 90],
                backgroundColor: [
                    "#FF6384",
                    "#63FF84",
                    "#84FF63",
                    "#8463FF"
                ]
            };
*/
            var barChart = new Chart(densityCanvas, {
                type: 'bar',
                data: {
                    labels: ["Emergencia", "Equipos", "Infraestructura", "Orden y Limpieza"],
                    datasets: [serie1,serie2,serie3]
                },
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: 'Estado de cumplimiento (%)'
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                // the data minimum used for determining the ticks is Math.min(dataMin, suggestedMin)
                                suggestedMin: 0,

                                // the data maximum used for determining the ticks is Math.max(dataMax, suggestedMax)
                                suggestedMax: 100
                            }
                        }]
                    }
                }
            });
            serie1, serie2, serie3 = null;
        }
    </script>
}

